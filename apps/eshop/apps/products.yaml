apiVersion: v1
kind: Service
metadata:
  name: products
  namespace: retail-eshop-${SDLC_ENV}
  labels:
    app: products
    service: products
spec:
  ports:
    - port: 80
      targetPort: 8000
      name: http
    - port: 3000
      targetPort: 3000
      name: tcp
  selector:
    app: products
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-products
  namespace: retail-eshop-${SDLC_ENV}
  labels:
    app: products
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-v1
  namespace: retail-eshop-${SDLC_ENV}
  labels:
    app: products
    version: v1
spec:
  selector:
    matchLabels:
      app: products
      version: v1
  template:
    metadata:
      labels:
        app: products
        version: v1
    spec:
      serviceAccountName: sa-products
      containers:
        - name: obs-tester
          image: ${HUB}/obs-tester-server:${OBSTESTER_TAG}
          imagePullPolicy: Always
          args:
            - '--log-output-level=all:debug'
            - '--http-listen-address=:8000' # address the http server in the container listens on
            - '--tcp-listen-address=:3000' # address the tcp server in the container listens on
            - '--ep-duration=0' # the default latency used for handling requests to / (echo handler)
            - '--ep-errors=0' # the default percentage of errors injected when handling echo requests
            - '--ep-headers=0' # the default percentage of double headers injected when handling echo requests
            - '--zipkin-reporter-endpoint=http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans'
            - '--zipkin-sample-rate=1.0' # When we originate client request, this is the sample rate we use.
            - '--zipkin-singlehost-spans' # Envoy does not work well with Zipkin's default shared spans
          env:
            - name: SVCNAME
              value: products
          ports:
            - name: http
              containerPort: 8000
            - name: tcp
              containerPort: 3000
